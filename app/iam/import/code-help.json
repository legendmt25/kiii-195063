{
  "id" : "e428293b-ba39-4691-b597-df7649d9f70c",
  "realm" : "code-help",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "20767207-ba47-4ac3-aa01-4505e99d36f0",
      "name" : "default-roles-code help",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "e428293b-ba39-4691-b597-df7649d9f70c",
      "attributes" : { }
    }, {
      "id" : "157d5c48-3117-441b-aea0-27d839bcf37e",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "e428293b-ba39-4691-b597-df7649d9f70c",
      "attributes" : { }
    }, {
      "id" : "a1846647-eaf8-4076-87c6-9c734ae7a6d8",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "e428293b-ba39-4691-b597-df7649d9f70c",
      "attributes" : { }
    } ],
    "client" : {
      "code-help-core" : [ {
        "id" : "6057e5ec-a424-4ac0-a820-111fa11e927b",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "822ab30d-9654-458a-959c-3b62cb27d164",
        "attributes" : { }
      } ],
      "realm-management" : [ {
        "id" : "f837a6f8-3253-4cb3-9cb0-cd4d640b4c35",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "ddaa33da-f786-40bf-a6b2-d4f1a02a356d",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-clients", "manage-authorization", "view-authorization", "manage-events", "query-clients", "query-realms", "view-identity-providers", "impersonation", "view-events", "query-users", "manage-users", "view-users", "query-groups", "create-client", "view-clients", "view-realm", "manage-realm", "manage-identity-providers" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "13839d66-e182-4ca6-bd26-37bb591f4ce9",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "c0e083d1-7abf-4e67-9c10-b4cd6488cea7",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "387b3660-4726-4534-999c-7996a6d5fee3",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "163464c4-a007-45da-8bf9-017499eee328",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "1d9c459d-b90a-4b74-9857-61c47dd7c65e",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "e093c2b5-2030-4afc-b730-bce8e3fea2fd",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "5d18e8c1-a864-4651-8518-b0b20863ba0f",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "c95a23ff-e8b0-445f-bc13-ede993ec38be",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "22a984b9-171d-435c-9add-73c9163fcae6",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "001337f4-901a-462c-a781-109a871cb6ee",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "7bcb94a5-2658-42ad-b8d9-4e5ab4391330",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "ab32a14e-ec83-4cf9-958c-b5e3f78eca66",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "38c65d9c-9d67-4669-84bb-05ba379947db",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "3f588652-4787-42e5-8c4f-ad7a17e4d422",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "7b3929a4-571a-4f68-b4f3-3f4acbb7b8f9",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "5426b6b7-7996-46e7-b7b9-26a51cdd6b8f",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      }, {
        "id" : "6a887692-962d-4eb7-8c18-6d15a486c60e",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
        "attributes" : { }
      } ],
      "code-help-flutter" : [ {
        "id" : "482747c6-99c3-4cb9-9442-9334df40f6d8",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "920a9dcd-5fd5-444d-9384-f59b7c1ce7b9",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "91bdb0b9-a0eb-4656-8995-240c43e129c2",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "7b54f4ef-273c-4438-a5b3-060199fbf05c",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "9854210b-b432-47c3-b2da-c82d44029f84",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "eec22cbb-4776-40ec-8a63-59b6c31eaa43",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "d1a67b98-350b-4dc2-940b-c2039da4e5f6",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "9bfac8ef-9871-41b3-92e0-3a5040448363",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "527e7888-a17c-4943-a24b-28a73a85e57f",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "c334344a-4889-4a08-877d-8e148b17c4f5",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "e1a24096-ddc0-41d2-a546-c92a8590181e",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      }, {
        "id" : "d803dd90-aac2-4d18-9db8-205ef2636bfa",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "20767207-ba47-4ac3-aa01-4505e99d36f0",
    "name" : "default-roles-code help",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "e428293b-ba39-4691-b597-df7649d9f70c"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "5c97609b-232f-443b-966d-42e902e5fd8d",
    "createdTimestamp" : 1676243952895,
    "username" : "martin.trajkovski",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "",
    "lastName" : "",
    "credentials" : [ {
      "id" : "508a2c43-9900-4a21-bd2a-a073ba748bc0",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1676243957519,
      "secretData" : "{\"value\":\"+/GDHfwvRbs7qBNLWdG+B5/S0dXdq06maxCIN1htsbJQPbk5IpXlP5DHZKIY8rvsByCTCS7e9dDTNP6Z+XQ7tw==\",\"salt\":\"zYTxTYYtdPcBVfC7SyfvBg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-code help" ],
    "notBefore" : 1676580966,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "c386fe90-adab-4fb9-83f3-0e0ae6cd56f7",
    "clientId" : "account",
    "name" : "${client_account}",
    "description" : "",
    "rootUrl" : "${authBaseUrl}",
    "adminUrl" : "",
    "baseUrl" : "/realms/code-help/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/code-help/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6d34ed44-12eb-4df1-bd71-d2d4f76bb3f6",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "description" : "",
    "rootUrl" : "${authBaseUrl}",
    "adminUrl" : "",
    "baseUrl" : "/realms/code-help/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/code-help/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "tls-client-certificate-bound-access-tokens" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "acr.loa.map" : "{}",
      "require.pushed.authorization.requests" : "false",
      "display.on.consent.screen" : "false",
      "pkce.code.challenge.method" : "S256",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "40f31cb6-6ab8-4b0c-bb0a-da3cff0508c6",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3ec3420f-aa4b-48c9-8712-c72fbaf808e8",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7b54f4ef-273c-4438-a5b3-060199fbf05c",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "822ab30d-9654-458a-959c-3b62cb27d164",
    "clientId" : "code-help-core",
    "name" : "${client_code-help-core}",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1676246275",
      "oauth2.device.authorization.grant.enabled" : "false",
      "access.token.signed.response.alg" : "RS512",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "tls-client-certificate-bound-access-tokens" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "acr.loa.map" : "{}",
      "require.pushed.authorization.requests" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "fc0a3a42-2f35-44e2-b951-1fd6e30b346e",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6ca5e77c-7ddd-414a-b739-eef582bf6167",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d6567229-c535-445e-87bd-45fe038255c6",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "920a9dcd-5fd5-444d-9384-f59b7c1ce7b9",
    "clientId" : "code-help-flutter",
    "name" : "${client_code-help-flutter}",
    "description" : "",
    "rootUrl" : "http://localhost:3000/",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1676243736",
      "login_theme" : "keycloak",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "use.jwks.url" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "tls-client-certificate-bound-access-tokens" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "acr.loa.map" : "{}",
      "require.pushed.authorization.requests" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "6966f7c2-7072-43c1-a598-d06c573ad740",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "937ffc9b-e081-4f17-9b6a-1fae31a31d34",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b2d07954-510f-454e-9f9e-a68f5682ab6f",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d71afcb7-fba6-4e18-88c8-dd07df9afbae",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "489dee1e-c9d0-4fb2-9f01-e64645c5eb05",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/code-help/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/code-help/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "59b2cbd4-4bb0-4a4b-82c0-354284466774",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "ff253d81-6d6f-4243-b7df-1c65e088e97c",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "acfb57ab-9e31-4b5c-833d-bc12547c1793",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "f65c2ddf-4e97-4b6f-ad40-ae3ef83be76b",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "5062da36-4702-4759-9f7a-a4f5bf9463c5",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "1d561d8e-3066-4686-85d5-2a6e9dcd386b",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "1450e1fa-9346-4a24-95a8-4e997100087d",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "cf2510d8-250f-4d43-8446-c38e499b482e",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "28914ec0-173e-432e-bb1d-d8640eb6c876",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e1790b94-ea5f-4f9e-b5d9-f89249840d17",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "55cde039-0403-48a6-a804-66fea5bb91d3",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4a83db89-6298-4cfa-9ec2-163839c0b9d0",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "688ca5f3-9805-4b0f-a38b-c881229dc7e6",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "5ba56c8d-5dd4-4f6d-9aa9-ca84814f1054",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "75c1e34c-b01e-47e8-b9aa-e03c3bb4a9a2",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "9e614a1e-88cf-462b-ab1b-f472fee34d7d",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f6192b6f-3902-4192-b8d8-93f88e608269",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7a4eca93-2a80-4bff-bf5c-6f9a0c97c202",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5fa1c3eb-faf4-4fc8-b401-cf24901fcb60",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d9717fe7-4528-401f-b951-714a0b2083be",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "08b57284-f4c0-448d-a0c8-8e3bdd5d7a7c",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3235c2af-4b62-4421-a91f-713088542f58",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2e7b999f-382c-47d1-b3cc-773f1ae9ed50",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "2f769601-921f-4dd4-999c-fe5866ee4f3d",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "82808bfe-0df3-4fd5-a8b1-13ecf524aae9",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "cce554a5-ea1e-47b6-ba51-3f087ff20e12",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2bb9508d-989f-4449-8c60-3e18d755aeb0",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "5dc5ed54-d9e8-4f10-b397-113f50d5d13d",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "125c3736-0f9a-4871-bff1-d1016df2a9d7",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f5a6b177-6496-417a-a000-f8c1effd9f0e",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "a9216dd8-21ef-471e-8dda-de5b393128d9",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0ba2399c-69fd-4c3a-8f5a-3c37d682e0e9",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7df7c216-136f-4588-919c-928602390892",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "032edb83-8096-4291-a2e3-e8b03526ac41",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "d53c8915-af2f-4a50-89a2-a376bc820472",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "9bdc19eb-9885-4016-9562-764f285e8f19",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3b2d91b0-94d9-4345-b3bf-5b7289cea556",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c964958a-6324-4b0a-a700-77703176ceba",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "keycloak",
  "accountTheme" : "keycloak",
  "adminTheme" : "keycloak",
  "emailTheme" : "keycloak",
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "b9aa82d4-6972-4390-857c-fc602c4a095a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "2b49c93b-e8b3-4e23-8636-46622a3bd836",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "d23ae048-e268-44d3-8cfb-a0afbb4f8f3c",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "107f7b2e-d4ed-40ca-abac-65e2f58b335f",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "295cd7c7-db7b-4d57-9d0d-7f91caffc0c4",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "33b29df9-bf4a-4808-a0e7-1c65d9ccab3a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "3111c54c-2ee0-4071-8d4f-a2c2eec197e6",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "9d972de5-4c79-492e-ad65-2eb4dab15d79",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "545b5537-ebf3-4e0b-a10f-392a530866ae",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "3ba00cea-45d7-4f4f-b081-d36dd38205ce",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEApxVdRHpMq5Tgb7uI5Aka5TBoXglCJ0eVGy+cmmhoPyUdJgzybb4uHYBhhvn4CkWQ2/quAFCJC71/BZRS99tbknhILY5HQ19yB5MVnSll2AxUehLK7TaE415KUjfR+nzSOcU73ypo5kkHf6ECnN3tPCbcGwromuQftYtVCaHnx9vM08v1NDhcvOvlmmy7Vndio0jkkO1I/M4Z7s0QERsXbrLr9uGa59C96jofVYfQZ+un9DFhNxQx/rk0eTPP/2qd/gFnpmClHIsLnu/hj/EKYSLWU0n1Z/faoq8vCPkURZ2dWGvGM2iODI6UpCKrJW+KZAZzLqw5Uaw0XI/Y8jlFwQIDAQABAoIBAE3L6dB/rYFa4aHEzTl4b9h1ULMwVmgZsXimE6HlqVx1eHwGHT8yBSDhbQe/DloiCBAVSb2FwjoAMsuzQ2p67clmTh1AGThqkZqrRq4V34DYROFOLMSE1R1VAwADU7bxNaWGi5kekxdeu6oWmzPVNagDZAsHakTsoUMTrDW++EAa+8x8Ym0qB8sqFFg7Z2PuPvjkeT2H58Lxylpl/UIYiOGbIf16Ad3uLFBZhBRw+R93JLLimIArDKEYpwLbj04552D984afOkquMQhbzB9UPro8WFmyWMDljpRXLrySEJbH4bUaXpn/NGDqeZgtBDVhl4V+1vsN4mmoeE8lsPTmx00CgYEA3kJcBnFn2dLMkr2csaDnvoc606pnfQrCDyEH1hLiOo7FR3+P548cWqPq5yphqYKwraQolWwzyv7liRdhEiDgfIQcjvXCrYIhLNCAzBPHLnn6q6j2ENz4fhUAlkvJXy7KJLFzC5jpZ5feWS2u4pkE3vPe5M2Ueg/rsfJLjmooRL8CgYEAwHK2yiDuL0vtE2c0dhI7h9P6hI45Tw4UWoAu4my2Doen4VnDe2PplRgrbU6NL05liRCkaADoVPpUWAnSqArGUax0HWbpHGy2gDIIh2Tjcm2t0gG2n3JOHc+D1eyjU93d9lUs1Dz5ZWzNvdo2gS1gM1xvxHUrZju2cUmOi0rElX8CgYBgZVeUU8s+5fZkDmjPgYIBWJVjCB0qVmgkN6c2aapEy3c0s1auj5s0lLNk3zTMWCpYpUIUzIEKIdNbyhAH1MqINqRMPLralf3defDikhFpTu4xVW6jkbMUu/ctOGF2LsztbSkAdqmEjJGbC/01ujgqmoqpoaAr8IvA+d1bPx+H8QKBgBLCG7cQBqdtiyo9AQwRMuRGcUDCbCucf7dijy9a0VQRPPfmO/um/Xme5Xy+D1zxE0yM5rmMfRjrXZVHP9VJV5NWb+r9wPMYVaGhPtuTpefdcPfrWtWn2p1lQMB1VGY0VhJQsxHs75JHTLaYsn9c4OegtvQ7R4Orhlj8hnxlSUwZAoGBAMXousI30aMaeWDIypchZpr7DwCCYVQ9x6HkEXb/0D+EDMNA+EV+I+J8QeGDYWhPfIlZX8TbjxeSlhfmZA6tT4yQ+FTFbof9Uztn6zQEU2DKjFb0zadVnsOnYyACkEbqTfPCnvIdXpR63Lmi/UunGj6IoHpudc4sVpr7hw0Su7OK" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICoTCCAYkCBgGGRpUxbzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDb2RlIGhlbHAwHhcNMjMwMjEyMTcwMjA4WhcNMzMwMjEyMTcwMzQ4WjAUMRIwEAYDVQQDDAlDb2RlIGhlbHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCnFV1EekyrlOBvu4jkCRrlMGheCUInR5UbL5yaaGg/JR0mDPJtvi4dgGGG+fgKRZDb+q4AUIkLvX8FlFL321uSeEgtjkdDX3IHkxWdKWXYDFR6EsrtNoTjXkpSN9H6fNI5xTvfKmjmSQd/oQKc3e08JtwbCuia5B+1i1UJoefH28zTy/U0OFy86+WabLtWd2KjSOSQ7Uj8zhnuzRARGxdusuv24Zrn0L3qOh9Vh9Bn66f0MWE3FDH+uTR5M8//ap3+AWemYKUciwue7+GP8QphItZTSfVn99qiry8I+RRFnZ1Ya8YzaI4MjpSkIqslb4pkBnMurDlRrDRcj9jyOUXBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFzeIqZI9/5MH1etTha/4+ZX0FfII28B2yfDRR1rnawJfGWiEn6ZnMoXP/RM/UQwzUcYWmpYwjK29LIpkWH+wn2OkBFzZC3OH6G50oV4ufT8rm7gHOPHLT3nqfbAAhvGk/F/+V7mDPWXyA6cc8fB4NMDc/Wek9DgyNE7MajwJEQ+/tsW5LPrXM9TnIFgB0vcnLqYNirR1qLTIFEiuVoqqhlaI/RMpnfiiJdQ682H8sjVRFnau2CHBg4LLznmeuYTFwX/SkC3Z7tbbyzRZ7U5cbKk3dd57WZGLu9jycZa7kY60j4nnLCxdetjkarPynXRQ8AQx3JmDFtj7kK9WTLmL6A=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "d5570425-d4cd-4990-855a-61a9689c2ab9",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f86af925-38ac-4b6d-b00e-4c90e6447ddf" ],
        "secret" : [ "BX4u4Mrwd6Mx0rus9uY9VQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "b2b64c01-5895-4d9d-b358-7261a0cd7f51",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAp+Zq1Mu5fj+XkDDPjBbtmWjU/cHTBaWk/e7mvlLHnsBwe452IZtgIZIuQvPDOFZQ4AxAHR2tTcvTEN42t1rxCemjl36jKZb6LLztI49k5mQEHZQ+f1rliTKBalthZt2SxIrtEp8HNLSL/ksKn9ySmZhZgp4FbqNMHSrEK+nQNoywpMVMdFqdTzsqf5zp2IV9VtbKkB0VCTmT2lJ3eK/wxq1AbIdmxwCvwXqNaSyYL22mNidpF5xayDWz2Yo1wxmhxCkYNQYLMz3L9YLjcYmyr68O7lbn5IXiBYFdTIjJL0yBrFoTL6J7EAS57V82WAPuPyKcQjjJnxOvPWctcnXYWQIDAQABAoIBABsAKcl3SqkEGoBYbSQS8tpDGs+FGkWz9fTVNLvCLbJ4sY4ZIqO0bDDx5GklcM1QSjjBl5TnFx3l65cwmR2C7TTiIwoDlkMjsa88oakgkAIh7ux/0M4jxLp7ygab0+3aL5ZWXhoqw1qlN0cpc7eyHcxADRL9jROWBLFDFaGXPAHtemNAiiOgJ5zIqbMqQYJwI8ibqcQ2JbPE6K7yvFc9OgjXv3OSDLAvcoZqTeX7+jv34ZzYqf/Owb0ADuBLK4oE3jbKacio9CpdQ8uKTYfPLhgMbL4iDkZGIBClWFRUTRw1zhTnCcj/n2DO1HZU+oWAjvuAy2bKnrfVM+JSEjTT6bUCgYEA7A+ySX/RNIBvbS8NxvbxOlbfQBGJiQRSHCdDcw8pph4K5jNutcJMSXyVmvjRdu9rqet36I7KStD7TUoTlpayn8amsFX/xdnCALtXW8NXXbiXponJ8c3/H8QhH0pBPkkDfZo37bUTOdDc9o1mHmIKEJB2APLtFbjiIicNRAdMJ1UCgYEAthTifp5S6J41eAf8v1XdWGyAssntL4+LKPqBCMXcqShq9rd9gGCxvA8oELQXkts8vEBUy1SiDUBKsj1vNIdtCDqeziGGcS9/7nPjG3DYwhuCC+/dmcutwSZQFXPHMeNUd7q8CDhp5kzLlm8mVNzgVM/Xf9RVFaZlu7Yxk8xbZPUCgYEAonK60nGvWl34UD7NUFqn7unRgJmQ+EWM6+rpM8j/dF3ASmKikVpAfWHK4nbQTvS8NpbgUZ3SAGKITcvoZv0Vt3ZRR5AnD9Sm+THzECcBfHGHiwfPfSOxqf6ifJHxDBfa2xjB3Ed8D5F4PgNYfxggrP1893I1TXmJxM7zBhmvgnECgYEArUKuS8IoLoXtZyxii0cPewa0aGzRMAKtbu8APfLZiHWXYvEzkSdxuPvLKinUjL/lyVSF233LPkTBT146JYgAbmYpmwg3wBhs6eCIaSI2gG5gjy9OdPxleHgWmHM1RvmE9PFR35ie3LCSwbE+jl4ncUzdSRwpYpKWF8rE3lkFVskCgYEAnDc0phRSusRNEn4k6Hp3PEp8Kq1WwDjTAjsWRoAY1u81M42CoD6TwCIUXZGFtoP5ZAcmGWBOJIGgld1Ii/gSBjRk0mMIi5Po05yiA/KMRDSHXIbhSxZ1OLIRNQvOom7ZUIhA/kafKG6iHUDE0ie3+MC7HBfhdccibIKMsY9tkKo=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICoTCCAYkCBgGGRpUuszANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDb2RlIGhlbHAwHhcNMjMwMjEyMTcwMjA3WhcNMzMwMjEyMTcwMzQ3WjAUMRIwEAYDVQQDDAlDb2RlIGhlbHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCn5mrUy7l+P5eQMM+MFu2ZaNT9wdMFpaT97ua+UseewHB7jnYhm2Ahki5C88M4VlDgDEAdHa1Ny9MQ3ja3WvEJ6aOXfqMplvosvO0jj2TmZAQdlD5/WuWJMoFqW2Fm3ZLEiu0Snwc0tIv+Swqf3JKZmFmCngVuo0wdKsQr6dA2jLCkxUx0Wp1POyp/nOnYhX1W1sqQHRUJOZPaUnd4r/DGrUBsh2bHAK/Beo1pLJgvbaY2J2kXnFrINbPZijXDGaHEKRg1BgszPcv1guNxibKvrw7uVufkheIFgV1MiMkvTIGsWhMvonsQBLntXzZYA+4/IpxCOMmfE689Zy1yddhZAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHSUbuSOorppiw/T9IhYS9TXKjmanDp1/VZWaDd50TEFaJYr/w5l5OJWrhUkQkR5B7gXIaBN0KzZMESpHY0lL6sLM1QsObQzdpu/FvV5hP/so4D4NW+HSegjX2jaRdDEd0OiGfawmDnWl4voIw2lT+EJFZoWAtdTCxv41s3tn1xFLjgS7AG/RzftynfPM6cjKG51tV/pGX+N5pkzkHIj8FqXugu86DAhibJ6lJ5FuE7SsVlP/rltA98UzBExwkrpl/Pmwp7o6J2kFVBnM9APO2x5DOt3NlepW/LLmSba4QuUFbh2D98NR7i+90dL5RvRXB7Kjl7B+lcBMmQIOmoCZ7k=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "e8e5bcd5-f34b-425c-89d9-0b864f0f09f2",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "b11eb18b-9dc2-4a63-9463-e757ee58291a" ],
        "secret" : [ "4GRDfLpB_12OnpXut7HZYPKkFgV16MOc3z80_r1YA7TcfvvhfoYw7pPrfV9pihR06En3RK5eMGcrs5ULTHhpzw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "785ba94f-e124-43f2-a28d-d29137e5be63",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3adee903-6640-450c-876e-309285b8428a",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8aaf7a66-a5cd-4dff-a671-359f3016baea",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "69c7b3c8-50dc-4508-9630-28454383e12a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d28e8097-51d8-44e0-896c-7734a1eace57",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b7f44745-7fec-4679-bd31-9fcd26b08718",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ac8c38dd-1b01-49eb-9220-e89d67bcee1e",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "16615a6e-1184-472e-9a95-8354902fd38f",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "244c8b35-c2de-4b63-9104-508d69f362c8",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2ad4cb91-bba4-4f04-9f3e-ee8ffe34ca4a",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f41eec8-eaf2-4ddb-b700-8941ebc75f8f",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6ebb152b-2b7e-427a-b753-111e65c83dfb",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e900cdae-695e-4b23-b4d9-5b09ade3b24c",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "faad7edb-1282-4dd8-b284-b286c3ff9e2b",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "affda521-892c-485b-af16-812e6c2f6208",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cf444e83-780b-46cc-89aa-38650c2cb35b",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b4b6d4cd-f932-4f93-9a5e-0c46003eff7c",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7f9d56b4-21b6-4c8b-bfab-d7f7eb58ec02",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7f5a3700-288e-4d57-bae7-35f6def04b57",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "95df23f9-4339-4e5e-994c-4d2b2df04eb9",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "77463bd6-4978-4832-bd29-0c1e7fadcb19",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "4c8b01d6-5124-40cf-b9cd-4ca4e25c1e53",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DevicePollingInterval" : "5",
    "clientOfflineSessionMaxLifespan" : "0",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}"
  },
  "keycloakVersion" : "20.0.3",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}